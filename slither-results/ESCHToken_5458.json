{
  "success": false,
  "error": "Traceback (most recent call last):\n  File \"/home/tiago/.local/lib/python3.6/site-packages/crytic_compile/platform/solc.py\", line 309, in _run_solc\n    ret = json.loads(stdout)\n  File \"/usr/lib/python3.6/json/__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python3.6/json/decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python3.6/json/decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/tiago/.local/lib/python3.6/site-packages/slither/__main__.py\", line 578, in main_impl\n    (slither_instances, results_detectors, results_printers, number_contracts) = process_all(filename, args, detector_classes, printer_classes)\n  File \"/home/tiago/.local/lib/python3.6/site-packages/slither/__main__.py\", line 60, in process_all\n    compilations = compile_all(target, **vars(args))\n  File \"/home/tiago/.local/lib/python3.6/site-packages/crytic_compile/crytic_compile.py\", line 1002, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File \"/home/tiago/.local/lib/python3.6/site-packages/crytic_compile/crytic_compile.py\", line 142, in __init__\n    self._compile(target, **kwargs)\n  File \"/home/tiago/.local/lib/python3.6/site-packages/crytic_compile/crytic_compile.py\", line 915, in _compile\n    self._platform.compile(self, target, **kwargs)\n  File \"/home/tiago/.local/lib/python3.6/site-packages/crytic_compile/platform/solc.py\", line 90, in compile\n    working_dir=solc_working_dir,\n  File \"/home/tiago/.local/lib/python3.6/site-packages/crytic_compile/platform/solc.py\", line 312, in _run_solc\n    raise InvalidCompilation(f\"Invalid solc compilation {stderr}\")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation ESCHToken_5458.sol:1:1: Error: Source file requires different compiler version (current compiler is 0.5.0+commit.1d4f565a.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.18;//20190809 \r\n^---------------------^\nESCHToken_5458.sol:23:4: Error: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.\n   function ESCHToken () public {\r\n   ^ (Relevant source part starts here and spans across multiple lines).\nESCHToken_5458.sol:23:4: Warning: This declaration shadows an existing declaration.\n   function ESCHToken () public {\r\n   ^ (Relevant source part starts here and spans across multiple lines).\nESCHToken_5458.sol:3:1: The shadowed declaration is here:\ncontract ESCHToken  {\r\n^ (Relevant source part starts here and spans across multiple lines).\n\nESCHToken_5458.sol:32:17: Error: Operator != not compatible with types address and int_const 0\n        require(_to != 0x0);\r\n                ^--------^\nESCHToken_5458.sol:38:9: Error: Event invocations have to be prefixed by \"emit\".\n        Transfer(_from, _to, _value);\r\n        ^--------------------------^\nESCHToken_5458.sol:64:9: Error: Event invocations have to be prefixed by \"emit\".\n        Burn(msg.sender, _value);\r\n        ^----------------------^\nESCHToken_5458.sol:74:9: Error: Event invocations have to be prefixed by \"emit\".\n        Burn(_from, _value);\r\n        ^-----------------^\nESCHToken_5458.sol:88:9: Error: Event invocations have to be prefixed by \"emit\".\n        Transfer(0, _ad, _sl);\r\n        ^-------------------^\nESCHToken_5458.sol:88:18: Error: Invalid type for argument in function call. Invalid implicit conversion from int_const 0 to address requested.\n        Transfer(0, _ad, _sl);\r\n                 ^\nESCHToken_5458.sol:111:5: Error: Member \"transfer\" not found or not visible after argument-dependent lookup in address.\n    SysAd0.transfer(msg.value);\r\n    ^-------------^\n\n",
  "results": {}
}